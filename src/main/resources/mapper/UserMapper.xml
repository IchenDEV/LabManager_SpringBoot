<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idevlab.LabMgr.Dao.UserDao">

    <select id="countUser" resultType="Integer">
        SELECT count(0)
        FROM sys_user u
        WHERE u.status = '1'
    </select>

    <resultMap id="userMap" type="com.idevlab.LabMgr.Util.Model.One2Many">
        <id column="userId" property="userId"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="roleId" property="roleId"/>
        <result column="phone" property="phone"/>
        <result column="address" property="address"/>
        <result column="email" property="email"/>
        <result column="sex" property="sex"/>
        <result column="roleName" property="roleName"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <result column="lastLoginTime" property="lastLoginTime"/>
        <result column="status" property="status"/>
        <collection property="permissionList" ofType="String">
            <id column="permissionName" property="permissionName"/>
        </collection>
    </resultMap>
    <select id="listUser" resultMap="userMap">
        SELECT
            u.*,
            r.role_name                            roleName,
            CONCAT(p.menu_name, p.permission_name) permissionName
        FROM (
                 SELECT
                     id                                      userId,
                     username                                username,
                     nickname                                nickname,
                     role_id                                 roleId,
                     sex                                     sex,
                     phone                                   phone,
                     address                                 address,
                     email                                   email,
                     status                                  status,
                     DATE_FORMAT(create_time, '%Y.%m.%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y.%m.%d %T') updateTime
                 FROM sys_user
                 WHERE status = 1
                 ORDER BY id
                 LIMIT #{offSet}, #{pageRow}
             ) u
            LEFT JOIN sys_role r ON r.id = u.roleId
            LEFT JOIN sys_role_permission rp ON rp.role_id = r.id
            LEFT JOIN sys_permission p ON p.id = rp.permission_id

        ORDER BY u.userId
    </select>


    <select id="countUserGroup" resultType="Integer">
        SELECT count(0)
         FROM sys_user u
                      LEFT JOIN user_group ug ON ug.user = u.id
                      LEFT JOIN group g ON g.id = ug.group
         WHERE u.status !=-1 And u.id=#{id}
    </select>
    <select id="listUserGroup" resultType="com.alibaba.fastjson.JSONObject">
                 SELECT
                     u.id                                      userId,
                     u.username                                username,
                     u.nickname                                nickname,
                     g.id                                      groupId,
                     g.name                                    groupName,
                     u.status                                  status,
                 FROM sys_user u
                      LEFT JOIN user_group ug ON ug.user = u.id
                      LEFT JOIN group g ON g.id = ug.group
                 WHERE u.status !=-1 And u.id=#{id}
                 LIMIT #{offSet}, #{pageRow}
    </select>

    <select id="countUserDepartment" resultType="Integer">
        SELECT count(0)
        FROM sys_user u
                      LEFT JOIN user_department ug ON ug.user = u.id
                      LEFT JOIN department g ON g.id = ug.department
        WHERE u.status !=-1 And u.id=#{id}
    </select>
    <select id="listUserDepartment" resultType="com.alibaba.fastjson.JSONObject">
                 SELECT
                     u.id                                      userId,
                     u.username                                username,
                     u.nickname                                nickname,
                     g.id                                      departmentId,
                     g.name                                    departmentName,
                     u.status                                  status,
                 FROM sys_user u
                      LEFT JOIN user_department ug ON ug.user = u.id
                      LEFT JOIN department g ON g.id = ug.department
                 WHERE u.status !=-1 And u.id=#{id}
                 LIMIT #{offSet}, #{pageRow}
    </select>


    <insert id="addUser" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO sys_user
        (username, password, nickname, role_id) VALUES
            (#{username}, #{password}, #{nickname}, #{roleId})
    </insert>

    <update id="updateUser">
        UPDATE sys_user
        <set>
            <if test="nickname !=null">
          nickname = #{nickname}
            </if>
            <if test="password !='' and password !=null">
            , password = #{password}
            </if>
            <if test="role_id !=null">
          ，role_id = #{role_id}
            </if>
            <if test="email !=null">
          ，email = #{email}
            </if>
            <if test="phone !=null">
          ，phone = #{phone}
            </if>
            <if test="address !=null">
          ，address = #{address}
            </if>
            <if test="sex !=null">
          ，sex = #{sex}
            </if>
            <if test="status !=null">
          ，status = #{status}
            </if>
        </set>
        WHERE id = #{userId} and id != 10001
    </update>

<select id="countSuper" resultType="Integer">
        SELECT count(0)
        FROM sys_user u
        WHERE u.status !=-1 And u.id=#{id} And u.superPassword=#{superPassword}
    </select>





    <select id="getAllRoles" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
            id        roleId,
            role_name roleName
        FROM sys_role
        WHERE status='1'
    </select>
    <resultMap id="roleMap" type="com.idevlab.LabMgr.Util.Model.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
            <result column="nickname" property="nickname"/>
        </collection>
    </resultMap>
    <select id="listRole" resultMap="roleMap">
        SELECT
            r.id              roleId,
            r.role_name       roleName,
            u.id              userId,
            u.nickname        nickname,
            p.id              permissionId,
            p.permission_name permissionName
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.status = '1'
        ORDER BY r.id, p.id
    </select>
    <resultMap id="permissionMap" type="com.idevlab.LabMgr.Util.Model.One2Many">
        <id column="menuName" property="menuName"/>
        <collection property="permissions" ofType="com.alibaba.fastjson.JSONObject">
            <id column="id" property="id"/>
            <result column="permissionName" property="permissionName"/>
            <result column="requiredPerm" property="requiredPerm" javaType="Integer"/>
        </collection>
    </resultMap>
    <select id="listAllPermission" resultMap="permissionMap">
        SELECT
            p.id                  id,
            p.menu_name           menuName,
            p.permission_name     permissionName,
            p.required_permission requiredPerm
        FROM sys_permission p;
    </select>

    <insert id="insertRole" useGeneratedKeys="true" keyProperty="roleId">
        INSERT INTO sys_role
        (role_name)
        VALUES (#{roleName})
    </insert>

    <insert id="insertRolePermission">
        insert into sys_role_permission (role_id, permission_id)
        values
        <foreach collection="permissions" item="item" index="index" separator=",">
            (#{roleId}, #{item})
        </foreach>
    </insert>

    <resultMap id="aRole" type="com.idevlab.LabMgr.Util.Model.One2Many">
        <id column="roleId" property="roleId"/>
        <result column="roleName" property="roleName"/>
        <collection property="users" ofType="com.alibaba.fastjson.JSONObject">
            <id column="userId" property="userId"/>
        </collection>
        <collection property="permissionIds" ofType="Integer">
            <id column="permissionId" property="permissionId"/>
        </collection>
    </resultMap>
    <select id="getRoleAllInfo" resultMap="aRole">
        SELECT
            r.id        roleId,
            r.role_name roleName,
            u.id        userId,
            p.id        permissionId
        FROM sys_role r
            LEFT JOIN sys_user u ON r.id = u.role_id AND u.status = '1'
            LEFT JOIN sys_role_permission rp ON r.id = rp.role_id AND rp.status = '1'
            LEFT JOIN sys_permission p ON rp.permission_id = p.id
        WHERE r.id = #{roleId}
    </select>

    <update id="removeRole">
        UPDATE sys_role
        SET
            status = '2'
        WHERE id = #{roleId} and id !=1
    </update>
    <update id="removeRoleAllPermission">
        UPDATE sys_role_permission
        SET
            status = '2'
        WHERE role_id = #{roleId}
    </update>

    <update id="removeOldPermission">
        UPDATE sys_role_permission
        SET
        status = '2'
        WHERE role_id = #{roleId}
        AND permission_id in (
        <foreach collection="permissions" item="item" index="index" separator=",">
            #{item}
        </foreach>
        )
    </update>
    <update id="updateRoleName">
        UPDATE sys_role
        SET
            role_name = #{roleName}
        WHERE id = #{roleId}
    </update>

    <select id="queryExistUsername" resultType="int">
        select count(0)
         from sys_user
         WHERE username=#{username}
    </select>
</mapper>