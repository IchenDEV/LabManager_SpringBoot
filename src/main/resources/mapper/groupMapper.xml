<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.idevlab.LabMgr.Dao.GroupDao">

    <select id="countGroup" resultType="Integer">
        SELECT count(0)
        FROM `group` b
        WHERE b.status !=-1
        <if test="id != null">And b.id= #{id}</if>
        <if test="name != null">And b.name like #{name}</if>
    </select>

    <resultMap id="groupMap" type="com.alibaba.fastjson.JSONObject">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="description" property="description"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
        <result column="status" property="status"/>
    </resultMap>
    <select id="listGroup" resultMap="groupMap">
                 SELECT
                     id                                      id,
                     name                                    name,
                     description                             description,                  
                     status                                  status,
                     DATE_FORMAT(create_time, '%Y/%m/%d %T') createTime,
                     DATE_FORMAT(update_time, '%Y/%m/%d %T') updateTime
                 FROM `group`
                 WHERE status != -1
        <if test="id != null">And id= #{id}</if>
        <if test="name != null">And name like #{name}</if>
                 ORDER BY id
                 LIMIT #{offSet}, #{pageRow}
    </select>
    <select id="countGroupUser" resultType="Integer">
        SELECT count(0)
        FROM `group` g
                      LEFT JOIN user_group ug ON ug.group = g.id
                      LEFT JOIN sys_user u ON u.id = ug.user
        WHERE g.status != -1 And u.status != -1  And ug.status != -1 
        <if test="group != null">And g.id= #{group}</if>
        <if test="user != null">And u.id= #{user}</if>

    </select>

    <resultMap id="groupUserMap" type="com.alibaba.fastjson.JSONObject">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="userId" property="userId"/>
        <result column="username" property="username"/>
        <result column="nickname" property="nickname"/>
        <result column="status" property="status"/>
    </resultMap>
    <select id="listGroupUser" resultMap="groupUserMap">
                 SELECT
                     ug.id                                     id,
                     u.id                                      userId,
                     u.username                                username,
                     u.nickname                                nickname,
                     g.status                                  status
                 FROM `group` g
                      LEFT JOIN user_group ug ON ug.group = g.id
                      LEFT JOIN sys_user u ON u.id = ug.user
                 WHERE g.status != -1 And u.status != -1  And ug.status != -1 
        <if test="group != null">And g.id= #{group}</if>
        <if test="user != null">And u.id= #{user}</if>
                 ORDER BY g.id
                 LIMIT #{offSet}, #{pageRow}
    </select>


    <select id="countGroupProject" resultType="Integer">
        SELECT count(0)
        FROM `group` g
                      LEFT JOIN group_project ug ON ug.group = g.id
                      LEFT JOIN project u ON u.id = ug.project
        WHERE g.status != -1 And u.status != -1 And ug.status != -1
        <if test="group != null">And g.id= #{group}</if>
        <if test="project != null">And u.id= #{project}</if>
    </select>

    <resultMap id="groupProjectMap" type="com.alibaba.fastjson.JSONObject">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="userId" property="userId"/>
        <result column="username" property="username"/>
        <result column="description" property="description"/>
        <result column="createTime" property="createTime"/>
        <result column="status" property="status"/>
    </resultMap>
    <select id="listGroupProject" resultMap="groupUserMap">
                 SELECT
                     ug.id                                     id,
                     ug.create_time                            createTime,
                     u.name                                    name,
                     u.description                             description,
                     u.id                                      projectId,
                     ug.status                                 status
                 FROM `group` g
                      LEFT JOIN group_project ug ON ug.group = g.id
                      LEFT JOIN project u ON u.id = ug.project
                 WHERE g.status != -1 And u.status != -1 And ug.status != -1
        <if test="group != null">And g.id= #{group}</if>
         <if test="project != null">And u.id= #{project}</if>
                 ORDER BY g.id
                 LIMIT #{offSet}, #{pageRow}
    </select>

    <insert id="addUserToGroup" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user_group
        (user,`group`,status) VALUES
            ( #{user}, #{group},#{status})
    </insert>

    <update id="deleteGroupUser">
        UPDATE user_group
        SET status=-1
        <where>
        <if test="group!= null">`group` = #{group}</if>
        <if test="user != null">And user= #{user}</if>
        <if test="id != null">And id= #{id}</if>
        </where>
    </update>

    <insert id="addProjectToGroup" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO group_project
        (project,`group`,status) VALUES
            ( #{project}, #{group},#{status})
    </insert>
    
     <update id="deleteGroupProject">
        UPDATE group_project
        SET status=-1
        <where>
        <if test="group!= null">`group` = #{group}</if>
        <if test="project != null">And project= #{project}</if>
        <if test="id != null">And id= #{id}</if>
        </where>
    </update>

    <insert id="addGroup" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO `group`
        (name, description,status) VALUES
            (#{name}, #{description}, #{status})
    </insert>

    <update id="updateGroup">
        UPDATE `group`
        <set>
            <if test="name != null">name=#{name},</if>
            <if test="description != null">description=#{description},</if>
            <if test="status != null">status=#{status}</if>
        </set>
        WHERE id = #{id}
    </update>

    <update id="deleteGroup">
        UPDATE `group`
        SET status=-1
        WHERE id = #{id}
    </update>
</mapper>